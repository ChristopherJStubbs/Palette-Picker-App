{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstubbs/Desktop/Colt-Steele-React/colors-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './Palette';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Page from './Page';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findPalette = id => {\n      return this.state.palettes.find(function (palette) {\n        return palette.id === id;\n      });\n    };\n\n    this.savePalette = newPalette => {\n      this.setState({\n        palettes: [...this.state.palettes, newPalette]\n      }, this.syncLocalStorage);\n    };\n\n    this.deletePalette = id => {\n      this.setState(st => ({\n        palettes: st.palettes.filter(palette => palette.id !== id)\n      }));\n      this.syncLocalStorage();\n    };\n\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n  }\n\n  syncLocalStorage() {\n    window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n  }\n\n  render() {\n    return React.createElement(Route, {\n      render: ({\n        location\n      }) => React.createElement(TransitionGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        key: location.key,\n        classNames: \"page\",\n        timeout: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/palette/new\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(NewPaletteForm, Object.assign({\n          savePalette: this.savePalette,\n          palettes: this.state.palettes\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:id\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Palette, {\n          palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(SingleColorPalette, {\n          colorId: routeProps.match.params.colorId,\n          palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(PaletteList, Object.assign({\n          palettes: this.state.palettes,\n          deletePalette: this.deletePalette\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Route, {\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(PaletteList, Object.assign({\n          palettes: this.state.palettes,\n          deletePalette: this.deletePalette\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chrisstubbs/Desktop/Colt-Steele-React/colors-app/src/App.js"],"names":["React","Component","Route","Switch","Palette","seedColors","generatePalette","PaletteList","SingleColorPalette","NewPaletteForm","TransitionGroup","CSSTransition","Page","App","constructor","props","findPalette","id","state","palettes","find","palette","savePalette","newPalette","setState","syncLocalStorage","deletePalette","st","filter","savedPalettes","JSON","parse","window","localStorage","getItem","setItem","stringify","render","location","key","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Palette from './Palette';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Page from './Page';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n        this.state = {\n            palettes: savedPalettes || seedColors\n        };\n    }\n\n    findPalette = (id) => {\n        return this.state.palettes.find(function(palette) {\n            return palette.id === id;\n        })\n    }\n\n    savePalette = (newPalette) => {\n        this.setState({ palettes: [...this.state.palettes, newPalette] }, this.syncLocalStorage);\n    }\n\n    syncLocalStorage() {\n        window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n    }\n\n    deletePalette = (id) => {\n        this.setState( st => ({\n            palettes: st.palettes.filter(palette => palette.id !== id)\n        }))\n        this.syncLocalStorage();\n    }\n\n    render() {\n        return (\n            <Route render={({location}) => (\n                <TransitionGroup>\n                    <CSSTransition key={location.key} classNames='page' timeout={250}>\n                        <Switch location={location}>\n                            <Route\n                                exact path=\"/palette/new\"\n                                render={routeProps => (\n                                    <Page>\n                                        <NewPaletteForm\n                                            savePalette={this.savePalette}\n                                            palettes={this.state.palettes}\n                                            {...routeProps}\n                                        />\n                                    </Page>\n                                )}\n                            />\n                            <Route\n                                exact path=\"/palette/:id\"\n                                render={routeProps => (\n                                    <Page>\n                                        <Palette\n                                            palette={generatePalette(\n                                                this.findPalette(routeProps.match.params.id)\n                                            )}\n                                        />\n                                    </Page>\n                                )}\n                            />\n                            <Route\n                                exact path=\"/palette/:paletteId/:colorId\"\n                                render={routeProps => (\n                                    <Page>\n                                        <SingleColorPalette\n                                            colorId={routeProps.match.params.colorId}\n                                            palette={generatePalette(\n                                                this.findPalette(routeProps.match.params.paletteId)\n                                            )}\n                                        />\n                                    </Page>\n                                )}\n                            />\n                            <Route\n                                exact path=\"/\"\n                                render={routeProps => (\n                                    <Page>\n                                        <PaletteList\n                                            palettes={this.state.palettes}\n                                            deletePalette={this.deletePalette}\n                                            {...routeProps}\n                                        />\n                                    </Page>\n                                )}\n                            />\n                            <Route\n                                render={routeProps => (\n                                    <Page>\n                                        <PaletteList\n                                            palettes={this.state.palettes}\n                                            deletePalette={this.deletePalette}\n                                            {...routeProps}\n                                        />\n                                    </Page>\n                                )}\n                            />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            )} />\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}