{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstubbs/Desktop/Colt-Steele-React/colors-app/src/Navbar.js\";\nimport React, { Component } from 'react';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { withStyles } from '@material-ui/styles';\nimport { Link } from 'react-router-dom';\nimport styles from './styles/NavbarStyles';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormatChange = e => {\n      this.setState({\n        format: e.target.value,\n        open: true\n      });\n      this.props.handleChange(e.target.value);\n    };\n\n    this.closeSnackbar = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      format: 'hex',\n      open: 'false'\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          level = _this$props.level,\n          changeLevel = _this$props.changeLevel,\n          showAllColors = _this$props.showAllColors,\n          classes = _this$props.classes;\n    const format = this.state.format;\n    return React.createElement(\"header\", {\n      className: classes.Navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Perfect Palette\")), showAllColors && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Level: \", level), React.createElement(\"div\", {\n      className: classes.slider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      defaultValue: level,\n      min: 100,\n      max: 900,\n      onAfterChange: changeLevel,\n      step: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.selectContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: format,\n      onChange: this.handleFormatChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"hex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"HEX / #ffffff\"), React.createElement(MenuItem, {\n      value: \"rgb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"RGB / rgb(255, 255, 255)\"), React.createElement(MenuItem, {\n      value: \"rgba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"RGBA / rgba(255, 255, 255, 1.0)\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.open,\n      autoHideDuration: 3000,\n      onClose: this.closeSnackbar,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Format Successfully Changed!\"),\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      action: [React.createElement(IconButton, {\n        onClick: this.closeSnackbar,\n        key: \"close\",\n        \"aria-label\": \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/Users/chrisstubbs/Desktop/Colt-Steele-React/colors-app/src/Navbar.js"],"names":["React","Component","Select","Snackbar","IconButton","CloseIcon","MenuItem","Slider","withStyles","Link","styles","Navbar","constructor","props","handleFormatChange","e","setState","format","target","value","open","handleChange","closeSnackbar","state","render","level","changeLevel","showAllColors","classes","logo","slider","selectContainer","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { withStyles } from '@material-ui/styles';\nimport {Link} from 'react-router-dom';\nimport styles from './styles/NavbarStyles';\n\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            format: 'hex',\n            open: 'false'\n        };\n    }\n\n    handleFormatChange = (e) => {\n        this.setState({\n            format: e.target.value, open: true\n        });\n        this.props.handleChange(e.target.value);\n    }\n\n    closeSnackbar = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    render() {\n        const {level, changeLevel, showAllColors, classes } = this.props;\n        const {format} = this.state;\n        return (\n            <header className={classes.Navbar}>\n                <div className={classes.logo}>\n                    <Link to=\"/\">Perfect Palette</Link>\n                </div>\n                {showAllColors && (\n                    <div>\n                        <span>Level: {level}</span>\n                        <div className={classes.slider}>\n                            <Slider\n                                defaultValue={level}\n                                min={100}\n                                max={900}\n                                onAfterChange={changeLevel}\n                                step={100}\n                            />\n                        </div>\n                    </div>\n                )}\n                <div className={classes.selectContainer}>\n                    <Select value={format} onChange={this.handleFormatChange} >\n                        <MenuItem value=\"hex\">HEX / #ffffff</MenuItem>\n                        <MenuItem value=\"rgb\">RGB / rgb(255, 255, 255)</MenuItem>\n                        <MenuItem value=\"rgba\">RGBA / rgba(255, 255, 255, 1.0)</MenuItem>\n                    </Select>\n                </div>\n                <Snackbar\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n                    open={this.state.open}\n                    autoHideDuration={3000}\n                    onClose={this.closeSnackbar}\n                    message={<span id=\"message-id\" >Format Successfully Changed!</span>}\n                    ContentProps={{\n                        \"aria-describedby\": \"message-id\"\n                    }}\n                    action={[\n                        <IconButton\n                            onClick={this.closeSnackbar}\n                            key=\"close\"\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    ]}\n                />\n            </header>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}